package nuzzgraph.dbclient.main.gui;

import com.jgoodies.forms.layout.CellConstraints;
import com.jgoodies.forms.layout.FormLayout;

import javax.annotation.PostConstruct;
import javax.swing.*;
import java.awt.*;

/**
 * User: Mark Nuzzolilo
 * Date: 3/20/12
 * Time: 6:46 PM
 */
public class MainForm_gui extends JFrame {
    private static MainForm mainForm;

    JPanel panelMain;
    JTabbedPane tabs;
    JTextPane txtLog;
    JPanel tabRawGraph;
    JPanel tabHighLevel1;
    JSplitPane splitMain;
    JPanel panelIntro;
    JLabel lblIntro;
    JScrollBar scrollBarNodeRawRelationships;
    JScrollPane spNodeRawRelationships;
    JPanel tabRaw;
    JPanel p1;
    TabNodeRaw_gui cTabNodeRaw;

    public MainForm logic;

    public MainForm_gui() {
        $$$setupUI$$$();
    }

    @PostConstruct
    public void init() {
        logic = new MainForm(this);
        cTabNodeRaw.init();
    }


    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panelMain = new JPanel();
        panelMain.setLayout(new FormLayout("fill:max(d;600px):grow", "fill:d:grow,fill:max(d;1px):noGrow"));
        panelMain.setMinimumSize(new Dimension(278, 300));
        panelMain.setVisible(true);
        panelMain.setBorder(BorderFactory.createTitledBorder(""));
        splitMain = new JSplitPane();
        splitMain.setContinuousLayout(false);
        splitMain.setDividerLocation(380);
        splitMain.setOneTouchExpandable(false);
        splitMain.setOrientation(0);
        splitMain.setResizeWeight(1.0);
        splitMain.setVisible(true);
        CellConstraints cc = new CellConstraints();
        panelMain.add(splitMain, cc.xy(1, 1, CellConstraints.DEFAULT, CellConstraints.FILL));
        tabs = new JTabbedPane();
        tabs.setVisible(true);
        splitMain.setLeftComponent(tabs);
        tabRaw = new JPanel();
        tabRaw.setLayout(new FormLayout("fill:d:grow", "center:d:grow"));
        tabs.addTab("Raw", tabRaw);
        p1 = new JPanel();
        p1.setLayout(new FormLayout("fill:d:grow", "fill:d:grow"));
        tabRaw.add(p1, cc.xy(1, 1, CellConstraints.DEFAULT, CellConstraints.FILL));
        cTabNodeRaw = new nuzzgraph.dbclient.main.gui.TabNodeRaw_gui();
        p1.add(cTabNodeRaw.$$$getRootComponent$$$(), cc.xy(1, 1, CellConstraints.FILL, CellConstraints.FILL));
        tabRawGraph = new JPanel();
        tabRawGraph.setLayout(new FormLayout("fill:d:grow", "center:d:grow"));
        tabs.addTab("Raw Graph", tabRawGraph);
        tabRawGraph.setBorder(BorderFactory.createTitledBorder(""));
        final JLabel label1 = new JLabel();
        label1.setText("Graph view not available");
        tabRawGraph.add(label1, cc.xy(1, 1));
        tabHighLevel1 = new JPanel();
        tabHighLevel1.setLayout(new FormLayout("fill:d:grow", "center:d:grow"));
        tabs.addTab("High-Level", tabHighLevel1);
        final JLabel label2 = new JLabel();
        label2.setText("High-Level view not available");
        tabHighLevel1.add(label2, cc.xy(1, 1));
        final JScrollPane scrollPane1 = new JScrollPane();
        splitMain.setRightComponent(scrollPane1);
        txtLog = new JTextPane();
        txtLog.setText("");
        scrollPane1.setViewportView(txtLog);
        panelIntro = new JPanel();
        panelIntro.setLayout(new FormLayout("fill:d:grow", "center:15px:grow,top:4dlu:noGrow,center:max(d;4px):noGrow"));
        panelIntro.setVisible(false);
        panelMain.add(panelIntro, cc.xy(1, 2, CellConstraints.LEFT, CellConstraints.DEFAULT));
        lblIntro = new JLabel();
        lblIntro.setText("Connect to server first");
        panelIntro.add(lblIntro, cc.xy(1, 1));
        spNodeRawRelationships = new JScrollPane();
        panelIntro.add(spNodeRawRelationships, cc.xy(1, 3));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new FormLayout("fill:d:grow", "fill:d:grow"));
        spNodeRawRelationships.setViewportView(panel1);
        scrollBarNodeRawRelationships = new JScrollBar();
        panel1.add(scrollBarNodeRawRelationships, cc.xy(1, 1, CellConstraints.RIGHT, CellConstraints.FILL));
        spNodeRawRelationships.setVerticalScrollBar(scrollBarNodeRawRelationships);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panelMain;
    }
}
